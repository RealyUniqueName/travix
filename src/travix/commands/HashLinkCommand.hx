package travix.commands;

import tink.cli.Rest;

using sys.FileSystem;

class HashLinkCommand extends Command {

  var hlCommand = "hl";
  
  public function install() {
    if(!Travix.isTravis)
      return;

    if(Travix.isMac) {
      // V1.3 only supports byte code generated by Haxe 4.0.0-preview.1 and 4.0.0-preview.2
      exec('wget', ['https://github.com/HaxeFoundation/hashlink/releases/download/1.3/hl-1.3-osx32.zip']);
      exec('unzip', ['hl-1.3-osx32.zip']);
      
      // workaround for: 'dyld: Library not loaded: libhl.dylib' ...  Reason: image not found
      exec('install_name_tool', ['-change', 'libhl.dylib', "hl-1.3-osx32/libhl.dylib".fullPath(), 'hl-1.3-osx32/hl']);
      
      hlCommand = "hl-1.3-osx32/hl";
      exec('chmod', ['u+x', hlCommand]);
      return;
    } 
    
    if(Travix.isLinux) {
      // V1.6 only supports byte code generated by Haxe 4.0.0-preview.4
      exec('wget', ['https://github.com/HaxeFoundation/hashlink/releases/download/1.6/hl-1.6.0-linux.tgz']);
      exec('tar', ['xvzf', 'hl-1.6.0-linux.tgz']);
      
      // workaround for "error while loading shared libraries: libhl.so cannot open shared object file: No such file or directory"
      Sys.putEnv("LD_LIBRARY_PATH", "hl-1.6.0-linux".fullPath());
      
      hlCommand = "hl-1.6.0-linux/hl";
      exec('chmod', ['u+x', hlCommand]);
      return;
    }
  }

  public function buildAndRun(rest:Rest<String>) {
    build('hl', ['-hl', 'bin/hl/tests.hl'].concat(rest), function () {
      exec(hlCommand, ['bin/hl/tests.hl']);
    });
  }
}
